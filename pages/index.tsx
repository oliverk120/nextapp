import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import { generateGiftList} from '../database/gifts'
import { Table, User, Text, Badge } from '@nextui-org/react';
import Link from 'next/link';
import { Gift_List } from '../database/gifts_interface';

const inter = Inter({ subsets: ['latin'] })

export async function getStaticProps() {
  const giftlist = generateGiftList();
  return {
    props: {
      giftlist,
    },
  }
}

export default function Home({giftlist}) {
  const columns = [
    { key: "name", label: "NAME" },
    { key: "price", label: "PRICE" },
    { key: "description", label: "DESCRIPTION" },
    { key: "source_info", label: "SOURCE INFO" },
    { key: "source_info.tags", label: "TAGS" },
  ];
  console.log(giftlist);

  const firstgift = giftlist[0].gifts;


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>Hello </h1>

        <Table
          aria-label="Example table with dynamic content"
          css={{
            height: "auto",
            minWidth: "100%",
          }}
        >
          <Table.Header columns={columns}>
            {(column) => (
              <Table.Column key={column.key}>{column.label}</Table.Column>
            )}
          </Table.Header>
          <Table.Body items={firstgift}>
            {(item) => (
              <Table.Row key={item.name}>
                <Table.Cell>
                  <User squared
                    src={item.image_url}
                    name={item.name}
                    description={item.brand}
                  /><br />

                </Table.Cell>
                <Table.Cell>{item.price}</Table.Cell>
                <Table.Cell>
                  <Text>
                    {item.description.substring(0, 50)}  <br />
                    {item.source_info.recipient}
                  </Text>
                </Table.Cell>
                <Table.Cell>
                  <User squared
                    src={item.source_info.source_logo_url}
                    name={item.source_info.source_name}
                  />
                  <Text size={12}>
                    Source: <Link
                      href={item.source_info.source_url}
                    >{item.source_info.title.substring(0, 30)} - {item.source_info.date}</Link>
                  </Text>
                </Table.Cell>
                <Table.Cell>
                  {item.source_info.tags.map((tag: string) => (
                    <Badge key={tag} color="primary">
                      {tag}
                    </Badge>
                  ))}
                </Table.Cell>
              </Table.Row>
            )}
          </Table.Body>
          <Table.Pagination
            shadow
            noMargin
            align="center"
            rowsPerPage={15}
            onPageChange={(page) => console.log({ page })}
          />
        </Table>


      </main>
    </>
  )
}
